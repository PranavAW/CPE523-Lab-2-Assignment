# Utilized example from Open Source Robotics Foundation, Inc.

import rclpy

from ackermann_msgs.msg import AckermannDriveStamped
from rclpy.node import Node

from std_msgs.msg import String
from std_msgs.msg import Int16
from std_msgs.msg import Int8

class relay(Node):

    def __init__(self):
        super().__init__('relay_')
        #self.subv = self.create_subscription(AckermannDriveStamped,'speed',self.listenerv_callback,10)
        #self.subd = self.create_subscription(AckermannDriveStamped,'steering_angle',self.listenerd_callback,10)
        
        self.subv = self.create_subscription(AckermannDriveStamped,'speed',self.rel_callback,10)
        self.subd = self.create_subscription(AckermannDriveStamped,'steering_angle',self.rel_callback,10)
        
        
        self.relaypubv =   self.create_publisher(AckermannDriveStamped, 'drive_relay', 10)
        
        self.i = 0

    def rel_callback(self, msg):
#    def listenerv_callback(self, msg):
        relack_msg = msg
        relack_msg.drive.speed *=3
        self.relaypubv.publish(relack_msg)
        self.get_logger().info('I heard speed = "%s"' % relack_msg.drive.speed)

        
#    def listenerd_callback(self, msg):

        relack_msg.drive.steering_angle *=3
        self.relaypubv.publish(relack_msg)
        self.get_logger().info('I heard steering angle = "%s"' % relack_msg.drive.steering_angle)
        self.i += 1


def main(args=None):
    rclpy.init(args=args)

    relay_ = relay()

    rclpy.spin(relay_)

    # Destroy the node explicitly
    # (optional - otherwise it will be done automatically
    # when the garbage collector destroys the node object)
    relay_.destroy_node()
    rclpy.shutdown()


if __name__ == '__main__':
    main()
